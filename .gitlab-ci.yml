stages:
  - test
  - maintenance
  - prepare
  - deploy

variables:
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  DOCKER_IMAGE: registry.opengeosys.org/ogs/tools/ogstools/devcontainer-3.10
  DOCKER_USER_IMAGE: registry.opengeosys.org/ogs/tools/ogstools/main-3.10
  ARTIFACTS_PAGES_URL: https://$CI_PROJECT_ROOT_NAMESPACE.$CI_PAGES_DOMAIN/-/$SUBGROUP_SLUG$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PROJECT_PATH == "ogs/tools/ogstools"'

image: $DOCKER_IMAGE

cache:
  paths:
    - .cache

.pip-setup-extra-headless: &pip-setup-extra-headless
  - pip install --extra-index-url https://wheels.vtk.org --upgrade --force-reinstall vtk-osmesa
  - pip install -i https://gmsh.info/python-packages-dev-nox --upgrade --force-reinstall gmsh

.pip-setup-activate: &pip-setup-activate
  - python -m venv .venv --upgrade-deps
  - source .venv/bin/activate

.conda-setup-activate: &conda-setup-activate
  - conda --version
  - export CONDA_ENV_NAME=ogstools_conda_${PYTHON_VERSION}
  - conda create -y -n $CONDA_ENV_NAME python=${PYTHON_VERSION} font-ttf-dejavu-sans-mono -c conda-forge
  - conda activate $CONDA_ENV_NAME

.pip-install-ogs-latest: &pip-install-ogs-latest
#  - pip uninstall ogs -y
  - pip install ogs --index-url https://gitlab.opengeosys.org/api/v4/projects/120/packages/pypi/simple --pre

.regression-rules: &regression-rules
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"

.maintenance-rules: &maintenance-rules
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: manual
    allow_failure: true
  - if: $CI_PIPELINE_SOURCE == "schedule"


pre-commit:
  tags: [shell, envinf]
  rules:
    - if: $CI_MERGE_REQUEST_IID
  needs: []
  script:
    - git fetch origin ${CI_MERGE_REQUEST_DIFF_BASE_SHA}
    - pre-commit run --from-ref ${CI_MERGE_REQUEST_DIFF_BASE_SHA} --to-ref HEAD

build:
  script:
    - pip install build
    - pyproject-build


tests (XSD) [R]:
  tags: [shell, envinf]
  needs: []
  before_script:
    - *pip-setup-activate
    - *pip-install-ogs-latest
    - pip install -e .[test]
    - *pip-setup-extra-headless
  script:
    - pytest tests/xsd/test_xsd.py


code_quality_ruff [R]:
  image: python:3.10-slim
  needs: []
  script:
    # Use same ruff as in .pre-commit-config.yaml
    - pip install ruff==0.0.277
    - ruff . --format gitlab > ruff-code-quality-report.json || true
  artifacts:
    reports:
      codequality: ruff-code-quality-report.json

code_quality_mypy [R]:
  image: python:3.10-slim
  needs: []
  script:
    # Use same mypy as in .pre-commit-config.yaml
    - pip install mypy==1.4.1 mypy-to-codeclimate
    - mypy ogstools > mypy-output.txt || true
    - mypy-to-codeclimate mypy-output.txt mypy-code-quality-report.json || true
  artifacts:
    reports:
      codequality: mypy-code-quality-report.json
